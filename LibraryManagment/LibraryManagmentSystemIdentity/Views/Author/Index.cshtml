@model IEnumerable<LibraryManagmentSystemIdentity.Models.AuthorsModel>

<h1> Authors </h1>

<!-- Add Author & Book Buttons -->
<a asp-action="Create" class="btn btn-success" title="Add a new author"> Add New Author</a>
<a asp-action="Create" asp-controller="Book" class="btn btn-secondary" title="Add a new book">Add New Book</a>

<!-- Search Bar -->
<input type="text" id="searchInput" class="search-box" placeholder="Search by Name...">

<!-- Author Table -->
<table id="authorsTable">
    <thead>
        <tr>
            <th><a href="#" class="sort" data-sort="AuthorId" style="color:black;">Author ID</a></th>
            <th><a href="#" class="sort" data-sort="AuthorName" style="color:black;">Name</a></th>
            <th><a href="#" class="sort" data-sort="BirthDate" style="color:black;">Birth Date</a></th>
            <th>Death Date</th>
            <th>Bio</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.AuthorId</td>
                <td>@item.AuthorName</td>
                <td>@item.BirthDate.ToString("yyyy-MM-dd")</td>
                <td>@item.DeadDate?.ToString("yyyy-MM-dd")</td>
                <td>@item.Bio</td>
                <td>
                    <a asp-action="Edit" class="btn btn-secondary" asp-route-id="@item.AuthorId" title="Edit Author">Edit</a> |
                    <button class="delete-link btn-danger" data-author-id="@item.AuthorId" title="Delete Author">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination -->
<div id="pagination">
    <button id="prevPage">Previous</button>
    <span id="pageInfo"></span>
    <button id="nextPage">Next</button>
</div>

<!-- Success and Error Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

<!-- jQuery & JavaScript for Features -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Fade out alerts
        setTimeout(() => $(".alert").fadeOut("slow"), 3000);

        // Search functionality
        $("#searchInput").on("keyup", function () {
            let value = $(this).val().toLowerCase();
            $("#authorsTable tbody tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
            });
        });

        // Sorting functionality
        $(".sort").on("click", function () {
            let column = $(this).data("sort");
            let rows = $("#authorsTable tbody tr").toArray();

            rows.sort((a, b) => {
                let valA = $(a).find("td:nth-child(" + (column === 'AuthorName' ? 2 : 3) + ")").text();
                let valB = $(b).find("td:nth-child(" + (column === 'AuthorName' ? 2 : 3) + ")").text();
                return valA.localeCompare(valB);
            });

            $("#authorsTable tbody").html(rows);
        });

        // Delete functionality with modal confirmation
        $(".delete-link").on("click", function () {
            let authorId = $(this).data("author-id");
            if (confirm("Are you sure you want to delete this author?")) {
                $.ajax({
                    url: '@Url.Action("Delete", "Author")/' + authorId,
                    type: 'POST',
                    success: () => {
                        alert("Author deleted successfully!");
                        location.reload();
                    },
                    error: () => alert("Error deleting the author.")
                });
            }
        });

        // Pagination
        let currentPage = 1;
        let rowsPerPage = 5;
        let rows = $("#authorsTable tbody tr");

        function showPage(page) {
            let start = (page - 1) * rowsPerPage;
            let end = start + rowsPerPage;
            rows.hide().slice(start, end).show();
            $("#pageInfo").text(`Page ${page} of ${Math.ceil(rows.length / rowsPerPage)}`);
        }

        $("#prevPage").on("click", function () {
            if (currentPage > 1) showPage(--currentPage);
        });

        $("#nextPage").on("click", function () {
            if (currentPage < Math.ceil(rows.length / rowsPerPage)) showPage(++currentPage);
        });

        showPage(1);
    });
</script>
