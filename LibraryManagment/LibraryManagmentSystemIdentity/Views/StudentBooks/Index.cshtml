@model IEnumerable<LibraryManagmentSystemIdentity.Models.StudentBooksModel>

<h2>Borrowed Books List</h2>

<a asp-action="Create" class="MyButton">Borrow a Book</a>
<!-- Search Bar -->
<div class="mb-3">
    <input type="text" id="searchBorrowedBooks" class="form-control" placeholder="Search by Student Name or Book Name" onkeyup="searchTable()">
</div>

<!-- Borrowed Books Table -->
<table class="table">
    <thead style="background-color:antiquewhite;">
        <tr>
            <th>Student Name</th>
            <th>Book Name</th>
            <th>Borrowed Date</th>
            <th>Return Date</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="borrowedBooksTableBody">
        @foreach (var record in Model)
        {
            <tr>
                <td>@record.Student.StudentName</td>
                <td>@record.Book.BookName</td>
                <td>@record.BorrowedDate.ToShortDateString()</td>
                <td>@record.ReturnDate.ToShortDateString()</td>
                <td>
                    <a asp-action="Edit" asp-route-studentId="@record.StudentId" asp-route-bookId="@record.BookId" class="MyButton">Edit</a>
                    <form asp-action="Delete" asp-route-studentid="@record.StudentId" asp-route-bookid="@record.BookId" method="post" style="display:inline;">
                        <button type="submit" class="btn btn-danger">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination -->
<div id="pagination">
    <button id="prevPage">Previous</button>
    <span id="pageInfo"></span>
    <button id="nextPage">Next</button>
</div>


<!-- Script for Search and Pagination -->
<script>
    // Search functionality
    function searchTable() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("searchBorrowedBooks");
        filter = input.value.toLowerCase();
        table = document.querySelector("table");
        tr = table.getElementsByTagName("tr");

        for (i = 1; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td");
            var matchFound = false;

            // Check both Student Name and Book Name for matching text
            for (var j = 0; j < td.length; j++) {
                if (td[j]) {
                    txtValue = td[j].textContent || td[j].innerText;
                    if (txtValue.toLowerCase().indexOf(filter) > -1) {
                        matchFound = true;
                    }
                }
            }

            tr[i].style.display = matchFound ? "" : "none";
        }
    }

    // Pagination functionality
    let currentPage = 1;
    let rowsPerPage = 5;
    let rows = $("#borrowedBooksTableBody tr");

    function showPage(page) {
        let start = (page - 1) * rowsPerPage;
        let end = start + rowsPerPage;
        rows.hide().slice(start, end).show();
        $("#pageInfo").text(`Page ${page} of ${Math.ceil(rows.length / rowsPerPage)}`);
    }

    $("#prevPage").on("click", function () {
        if (currentPage > 1) showPage(--currentPage);
    });

    $("#nextPage").on("click", function () {
        if (currentPage < Math.ceil(rows.length / rowsPerPage)) showPage(++currentPage);
    });

    showPage(1);
</script>
